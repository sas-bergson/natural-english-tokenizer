<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="_demo_tokenizer_8py" kind="file" language="Python">
    <compoundname>DemoTokenizer.py</compoundname>
    <innerclass refid="class_demo_tokenizer_1_1_demo_tokenizer" prot="public">DemoTokenizer::DemoTokenizer</innerclass>
    <innernamespace refid="namespace_demo_tokenizer">DemoTokenizer</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>regex<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="2" refid="class_demo_tokenizer_1_1_demo_tokenizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_demo_tokenizer_1_1_demo_tokenizer" kindref="compound">DemoTokenizer</ref>:<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>!<sp/>function<sp/>to<sp/>enable<sp/>character<sp/>recognition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_demo_tokenizer_1_1_demo_tokenizer_1a466754cc98ec8032207a1249c9eb3b1c" kindref="member">fmtcharRecog</ref>(text):</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>function<sp/>to<sp/>enable<sp/>character<sp/>recognition</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(text)):</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">r&apos;\.|,|\&apos;|\)|\}|\]|\:|\;&apos;</highlight><highlight class="normal">,<sp/>text[i]):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>new_text+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+text[i]</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">r&apos;\(|\{|\[|\s&apos;</highlight><highlight class="normal">,<sp/>text[i]):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>new_text+text[i]+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>new_text+text[i]</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_text</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>!<sp/>sentences<sp/>splitting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_demo_tokenizer_1_1_demo_tokenizer_1a1e7823d2dc53913bf4b16d87c951d4b2" kindref="member">performSentenceSplit</ref>(text):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>function<sp/>to<sp/>enable<sp/>sentence<sp/>splitting<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formated_text<sp/>=<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(text)):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">r&apos;\.&apos;</highlight><highlight class="normal">,<sp/>text[i]):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formated_text<sp/>=<sp/>formated_text+text[i]+</highlight><highlight class="stringliteral">&quot;<sp/>.sfmat&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formated_text<sp/>=<sp/>formated_text+text[i]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formated_text.split(</highlight><highlight class="stringliteral">&quot;<sp/>.sfmat&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">performWordSplit(self,text):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.<ref refid="class_demo_tokenizer_1_1_demo_tokenizer_1a466754cc98ec8032207a1249c9eb3b1c" kindref="member">fmtcharRecog</ref>(text).strip()</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#!<sp/>tagging<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="class_demo_tokenizer_1_1_demo_tokenizer_1aa3264a104732bd9dee0419ef93145d3c" kindref="member">tag</ref>(lstData):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tagging<sp/>string<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>a<sp/>function<sp/>to<sp/>generate<sp/>a<sp/>list<sp/>of<sp/>colors</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>generate<sp/>a<sp/>list<sp/>of<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;green&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blue&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;orange&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;violet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;red&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagged<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lstData:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sunday&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;monday&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tuseday&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;wednesday&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;thursday&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;friday&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;saturday&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ance$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ers$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ence$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ar$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*er$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ir$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*or$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ur$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ism$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ment$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*age$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*hood$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ness$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*irt$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*er$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*bots&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ty$&apos;</highlight><highlight class="normal">,<sp/>word):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagged.append(word+</highlight><highlight class="stringliteral">&quot;,<sp/>noun<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*able$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ible$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*wn$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*wns$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*has$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ant$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ent$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ists$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ist$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ous$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ing$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ful$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ish&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ize$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ify$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ize&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ize$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ize$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ize$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ise$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ize$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ed$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ate$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ons$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ing&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*de&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ound&apos;</highlight><highlight class="normal">,<sp/>word):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagged.append(word+</highlight><highlight class="stringliteral">&quot;,<sp/>verb<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ly$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ry$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;right&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;wrong&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*here$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;soon&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*soon$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*times$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*in$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*here$&apos;</highlight><highlight class="normal">,<sp/>word):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagged.append(word+</highlight><highlight class="stringliteral">&quot;,<sp/>adverb<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>word<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagged<sp/>=<sp/>tagged</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*zing$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*sive$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*ive$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*tic$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>re.search(</highlight><highlight class="stringliteral">r&apos;.*tle$&apos;</highlight><highlight class="normal">,<sp/>word)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>colors:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagged.append(word+</highlight><highlight class="stringliteral">&quot;,<sp/>adjectives<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagged.append(word+</highlight><highlight class="stringliteral">&quot;,<sp/>none&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tagged</highlight></codeline>
    </programlisting>
    <location file="DemoTokenizer.py"/>
  </compounddef>
</doxygen>
