<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_lexical_8py_source" xml:lang="en-US">
<title>lexical.py</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_lexical_8py_source_1l00001"/><link linkend="_namespacelexical">00001</link> <emphasis role="keyword">import</emphasis>&#32;sys
<anchor xml:id="_lexical_8py_source_1l00002"/>00002 <emphasis role="keyword">import</emphasis>&#32;re
<anchor xml:id="_lexical_8py_source_1l00003"/>00003 
<anchor xml:id="_lexical_8py_source_1l00004"/>00004 
<anchor xml:id="_lexical_8py_source_1l00005"/><link linkend="_namespacelexical_1af07d9b67777b3cb5d47afe9ff6b94cb1">00005</link> text&#32;=&#32;<emphasis role="stringliteral">&quot;Its&#32;show&#32;time&quot;</emphasis>
<anchor xml:id="_lexical_8py_source_1l00006"/>00006 
<anchor xml:id="_lexical_8py_source_1l00007"/><link linkend="_namespacelexical_1a5a4ac3688f4251e52869010a8b7232fc">00007</link> punctuation&#32;=&#32;[<emphasis role="stringliteral">&apos;!&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;?&apos;</emphasis>,<emphasis role="stringliteral">&apos;,&apos;</emphasis>,<emphasis role="stringliteral">&apos;.&apos;</emphasis>,<emphasis role="stringliteral">&apos;;&apos;</emphasis>,<emphasis role="stringliteral">&apos;:&apos;</emphasis>]
<anchor xml:id="_lexical_8py_source_1l00008"/><link linkend="_namespacelexical_1a8fe4e5fa0f02ae8f8f5b3eb2f46fd25e">00008</link> noun&#32;=&#32;[<emphasis role="stringliteral">&apos;+&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;*&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;/&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;=&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;+=&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;-=&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;==&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&lt;&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&gt;&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&lt;=&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;&gt;=&apos;</emphasis>]
<anchor xml:id="_lexical_8py_source_1l00009"/><link linkend="_namespacelexical_1a08edda5cc39db2649d99f746b5c3fd39">00009</link> adverb&#32;=&#32;[<emphasis role="stringliteral">&apos;auto&apos;</emphasis>,<emphasis role="stringliteral">&apos;break&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;case&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;char&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;const&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;continue&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;default&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;do&apos;</emphasis>,&#32;
<anchor xml:id="_lexical_8py_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;double&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;else&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;enum&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;extern&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;float&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;for&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;goto&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;if&apos;</emphasis>,&#32;
<anchor xml:id="_lexical_8py_source_1l00011"/>00011 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;int&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;long&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;register&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;return&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;short&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;signed&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;sizeof&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;static&apos;</emphasis>,&#32;
<anchor xml:id="_lexical_8py_source_1l00012"/>00012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;struct&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;switch&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;typedef&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;union&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;unsigned&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;void&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;volatile&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;while&apos;</emphasis>]
<anchor xml:id="_lexical_8py_source_1l00013"/><link linkend="_namespacelexical_1a331bfcb04bc25622e9cfed4e52c0356c">00013</link> verb&#32;=&#32;[&#32;<emphasis role="stringliteral">&apos;gag&apos;</emphasis>&#32;,&#32;<emphasis role="stringliteral">&apos;gain&apos;</emphasis>&#32;,&#32;<emphasis role="stringliteral">&apos;gallop&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;gamble&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gargle&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;garnish&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gasp&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gather&apos;</emphasis>,<emphasis role="stringliteral">&apos;gauge&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;geld&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;generalize&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;generate&apos;</emphasis>&#32;,&#32;<emphasis role="stringliteral">&apos;germinate&apos;</emphasis>&#32;,&#32;<emphasis role="stringliteral">&apos;gesticulate&apos;</emphasis>,&#32;
<anchor xml:id="_lexical_8py_source_1l00014"/>00014 &#32;<emphasis role="stringliteral">&apos;get&apos;</emphasis>&#32;,&#32;<emphasis role="stringliteral">&apos;giggle&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;gild&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;give&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;glance&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;glaze&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gleam&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glean&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glide&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glimmer&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;glimpse&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glisten&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glitter&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glorify&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;gloss&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glow&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;glue&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gnash&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gnaw&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;go&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;goad&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;gossip&apos;</emphasis>,&#32;&#32;<emphasis role="stringliteral">&apos;govern&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;grab&apos;</emphasis>&#32;,&#32;<emphasis role="stringliteral">&apos;grace&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;grade&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;graduate&apos;</emphasis>&#32;
<anchor xml:id="_lexical_8py_source_1l00015"/>00015 ,&#32;<emphasis role="stringliteral">&apos;graft&apos;</emphasis>,<emphasis role="stringliteral">&apos;grant&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;granulate&apos;</emphasis>,<emphasis role="stringliteral">&apos;grasp&apos;</emphasis>,<emphasis role="stringliteral">&apos;grate&apos;</emphasis>,<emphasis role="stringliteral">&apos;gravel&apos;</emphasis>,<emphasis role="stringliteral">&apos;gravitate&apos;</emphasis>,<emphasis role="stringliteral">&apos;graze&apos;</emphasis>,<emphasis role="stringliteral">&apos;grease&apos;</emphasis>,<emphasis role="stringliteral">&apos;greet&apos;</emphasis>,<emphasis role="stringliteral">&apos;grill&apos;</emphasis>,<emphasis role="stringliteral">&apos;grin&apos;</emphasis>,<emphasis role="stringliteral">&apos;grind&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;grip&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;groan&apos;</emphasis>,<emphasis role="stringliteral">&apos;groom&apos;</emphasis>,<emphasis role="stringliteral">&apos;grope&apos;</emphasis>,<emphasis role="stringliteral">&apos;grow&apos;</emphasis>,<emphasis role="stringliteral">&apos;growl&apos;</emphasis>,<emphasis role="stringliteral">&apos;grub&apos;</emphasis>,<emphasis role="stringliteral">&apos;grumble&apos;</emphasis>,<emphasis role="stringliteral">&apos;grunt&apos;</emphasis>,<emphasis role="stringliteral">&apos;guarantee&apos;</emphasis>,<emphasis role="stringliteral">&apos;guard&apos;</emphasis>,<emphasis role="stringliteral">&apos;guess&apos;</emphasis>,<emphasis role="stringliteral">&apos;guide&apos;</emphasis>,&#32;<emphasis role="stringliteral">&apos;gurgle&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gush&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;gut&apos;</emphasis>&#32;,<emphasis role="stringliteral">&apos;guzzle&apos;</emphasis>&#32;
<anchor xml:id="_lexical_8py_source_1l00016"/>00016 ]
<anchor xml:id="_lexical_8py_source_1l00017"/>00017 
<anchor xml:id="_lexical_8py_source_1l00018"/>00018 
<anchor xml:id="_lexical_8py_source_1l00019"/><link linkend="_namespacelexical_1a5e4c8af01c151951897eb17fd46cde2e">00019</link> in_adverb&#32;=&#32;[]
<anchor xml:id="_lexical_8py_source_1l00020"/><link linkend="_namespacelexical_1a9269d51e467a03d262335e8c22ab8fb2">00020</link> in_spl_punctuation&#32;=&#32;[]
<anchor xml:id="_lexical_8py_source_1l00021"/><link linkend="_namespacelexical_1a008f385c6c32f86c9e19cf4a5481d8a0">00021</link> in_noun&#32;=&#32;[]
<anchor xml:id="_lexical_8py_source_1l00022"/><link linkend="_namespacelexical_1a79b012a4f7c2b9de4149b3bb8d9c1240">00022</link> in_verb&#32;=&#32;[]
<anchor xml:id="_lexical_8py_source_1l00023"/><link linkend="_namespacelexical_1a48ae17c9449f3f274d8a80dda67fa50a">00023</link> in_identifiers&#32;=&#32;[]
<anchor xml:id="_lexical_8py_source_1l00024"/><link linkend="_namespacelexical_1a3c93b5f9ebdc7142ec904e5477253ee6">00024</link> in_constants&#32;=&#32;[]
<anchor xml:id="_lexical_8py_source_1l00025"/>00025 
<anchor xml:id="_lexical_8py_source_1l00026"/><link linkend="_namespacelexical_1ae89581a91db0ce5f2eca90a2843a35c9">00026</link> tokens&#32;=&#32;[]
<anchor xml:id="_lexical_8py_source_1l00027"/><link linkend="_namespacelexical_1a1e487213adc78c8cf7b637be9fb09850">00027</link> isStr&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_lexical_8py_source_1l00028"/><link linkend="_namespacelexical_1a4b61698279ff55043bf20d2948e0b26c">00028</link> isWord&#32;=&#32;<emphasis role="keyword">False</emphasis>
<anchor xml:id="_lexical_8py_source_1l00029"/><link linkend="_namespacelexical_1aaefc2eccfb838fbc9b568ffe2e656b63">00029</link> isCmt&#32;=&#32;0
<anchor xml:id="_lexical_8py_source_1l00030"/><link linkend="_namespacelexical_1afa59245bd14a08d905d30bd2758ecd35">00030</link> token&#32;=&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>
<anchor xml:id="_lexical_8py_source_1l00031"/>00031 
<anchor xml:id="_lexical_8py_source_1l00032"/>00032 <emphasis role="keywordflow">for</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;text:
<anchor xml:id="_lexical_8py_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;==&#32;<emphasis role="stringliteral">&apos;/&apos;</emphasis>:
<anchor xml:id="_lexical_8py_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCmt&#32;=&#32;isCmt+1
<anchor xml:id="_lexical_8py_source_1l00035"/>00035 
<anchor xml:id="_lexical_8py_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;isCmt&#32;==&#32;2:
<anchor xml:id="_lexical_8py_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;i&#32;==&#32;<emphasis role="stringliteral">&apos;\n&apos;</emphasis>:
<anchor xml:id="_lexical_8py_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>
<anchor xml:id="_lexical_8py_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isCmt&#32;=&#32;0
<anchor xml:id="_lexical_8py_source_1l00040"/>00040 &#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;i&#32;==&#32;<emphasis role="stringliteral">&apos;&quot;&apos;</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;i&#32;==&#32;<emphasis role="stringliteral">&quot;&apos;&quot;</emphasis>:
<anchor xml:id="_lexical_8py_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;isStr:
<anchor xml:id="_lexical_8py_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens.append(token)
<anchor xml:id="_lexical_8py_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>
<anchor xml:id="_lexical_8py_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isStr&#32;=&#32;<emphasis role="keywordflow">not</emphasis>&#32;isStr&#32;
<anchor xml:id="_lexical_8py_source_1l00046"/>00046 
<anchor xml:id="_lexical_8py_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;isStr:
<anchor xml:id="_lexical_8py_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;token+i
<anchor xml:id="_lexical_8py_source_1l00049"/>00049 &#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;i&#32;<emphasis role="keywordflow">in</emphasis>&#32;punctuation:
<anchor xml:id="_lexical_8py_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens.append(i)
<anchor xml:id="_lexical_8py_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;i.isalnum()&#32;<emphasis role="keywordflow">and</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;isWord:
<anchor xml:id="_lexical_8py_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;isWord&#32;=&#32;<emphasis role="keyword">True</emphasis>
<anchor xml:id="_lexical_8py_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;i
<anchor xml:id="_lexical_8py_source_1l00056"/>00056 &#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;(i&#32;<emphasis role="keywordflow">in</emphasis>&#32;verb)&#32;<emphasis role="keywordflow">or</emphasis>&#32;(i&#32;<emphasis role="keywordflow">in</emphasis>&#32;noun):
<anchor xml:id="_lexical_8py_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;token:
<anchor xml:id="_lexical_8py_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens.append(token)
<anchor xml:id="_lexical_8py_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;<emphasis role="stringliteral">&apos;&apos;</emphasis>
<anchor xml:id="_lexical_8py_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keywordflow">not</emphasis>&#32;(i==<emphasis role="stringliteral">&apos;&#32;&apos;</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;i==<emphasis role="stringliteral">&apos;\n&apos;</emphasis>&#32;<emphasis role="keywordflow">or</emphasis>&#32;i==<emphasis role="stringliteral">&apos;&#32;&#32;&#32;&apos;</emphasis>):
<anchor xml:id="_lexical_8py_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tokens.append(i)
<anchor xml:id="_lexical_8py_source_1l00064"/>00064 
<anchor xml:id="_lexical_8py_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;isWord:
<anchor xml:id="_lexical_8py_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;token+i
<anchor xml:id="_lexical_8py_source_1l00067"/>00067 
<anchor xml:id="_lexical_8py_source_1l00068"/>00068 
<anchor xml:id="_lexical_8py_source_1l00069"/>00069 <emphasis role="keywordflow">for</emphasis>&#32;token&#32;<emphasis role="keywordflow">in</emphasis>&#32;tokens:
<anchor xml:id="_lexical_8py_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;token&#32;<emphasis role="keywordflow">in</emphasis>&#32;punctuation:
<anchor xml:id="_lexical_8py_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_spl_punctuation.append(token)
<anchor xml:id="_lexical_8py_source_1l00072"/>00072 
<anchor xml:id="_lexical_8py_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;token&#32;<emphasis role="keywordflow">in</emphasis>&#32;noun:
<anchor xml:id="_lexical_8py_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_noun.append(token)
<anchor xml:id="_lexical_8py_source_1l00075"/>00075 
<anchor xml:id="_lexical_8py_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;token&#32;<emphasis role="keywordflow">in</emphasis>&#32;adverb:
<anchor xml:id="_lexical_8py_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_adverb.append(token)
<anchor xml:id="_lexical_8py_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;re.search(<emphasis role="stringliteral">&quot;^[_a-zA-Z][_a-zA-Z0-9]*$&quot;</emphasis>,token):
<anchor xml:id="_lexical_8py_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_identifiers.append(token)
<anchor xml:id="_lexical_8py_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;token&#32;<emphasis role="keywordflow">in</emphasis>&#32;verb:
<anchor xml:id="_lexical_8py_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_verb.append(token)
<anchor xml:id="_lexical_8py_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_lexical_8py_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;in_constants.append(token)
<anchor xml:id="_lexical_8py_source_1l00087"/>00087 &#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00089"/>00089 print(<emphasis role="stringliteral">&quot;No&#32;of&#32;tokens&#32;=&#32;&quot;</emphasis>,&#32;len(tokens))&#32;&#32;&#32;
<anchor xml:id="_lexical_8py_source_1l00090"/>00090 print(<emphasis role="stringliteral">&quot;\nNo.&#32;of&#32;adverb&#32;=&#32;&quot;</emphasis>,len(in_adverb))
<anchor xml:id="_lexical_8py_source_1l00091"/>00091 print(in_adverb);
<anchor xml:id="_lexical_8py_source_1l00092"/>00092 print(<emphasis role="stringliteral">&quot;\nNo.&#32;of&#32;special&#32;punctuation&#32;=&#32;&quot;</emphasis>,len(in_spl_punctuation))
<anchor xml:id="_lexical_8py_source_1l00093"/>00093 print(in_spl_punctuation);
<anchor xml:id="_lexical_8py_source_1l00094"/>00094 print(<emphasis role="stringliteral">&quot;\nNo.&#32;of&#32;noun&#32;=&#32;&quot;</emphasis>,len(in_noun))
<anchor xml:id="_lexical_8py_source_1l00095"/>00095 print(in_noun);
<anchor xml:id="_lexical_8py_source_1l00096"/>00096 print(<emphasis role="stringliteral">&quot;\nNo.&#32;of&#32;identifiers&#32;=&#32;&quot;</emphasis>,len(in_identifiers))
<anchor xml:id="_lexical_8py_source_1l00097"/>00097 print(in_identifiers);
<anchor xml:id="_lexical_8py_source_1l00098"/>00098 print(<emphasis role="stringliteral">&quot;\nNo.&#32;of&#32;constants&#32;=&#32;&quot;</emphasis>,len(in_constants))
<anchor xml:id="_lexical_8py_source_1l00099"/>00099 print(in_constants);
<anchor xml:id="_lexical_8py_source_1l00100"/>00100 print(<emphasis role="stringliteral">&quot;\nNo.&#32;of&#32;verb&#32;=&#32;&quot;</emphasis>,len(in_verb))
<anchor xml:id="_lexical_8py_source_1l00101"/>00101 print(in_verb);
<anchor xml:id="_lexical_8py_source_1l00102"/>00102 f.close()&#32;&#32;&#32;
</programlisting></section>
