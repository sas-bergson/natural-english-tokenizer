<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="main_8py" kind="file" language="Python">
    <compoundname>main.py</compoundname>
    <innerclass refid="classmain_1_1statement__tokenizer" prot="public">main::statement_tokenizer</innerclass>
    <innernamespace refid="namespacemain">main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacemain" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>parts_speech<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;!<sp/>@brief<sp/>Example<sp/>Python<sp/>program<sp/>with<sp/>Doxygen<sp/>style<sp/>comments.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classmain_1_1statement__tokenizer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer" kindref="compound">statement_tokenizer</ref>:</highlight></codeline>
<codeline lineno="8" refid="classmain_1_1statement__tokenizer_1ad69e6f7c8f99f1e12e40c495952e00e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1ad69e6f7c8f99f1e12e40c495952e00e3" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>the<sp/>constructor.<sp/>where<sp/>all<sp/>the<sp/>regex<sp/>are<sp/>defined<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>the<sp/>word<sp/>that<sp/>the<sp/>user<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>the<sp/>calling<sp/>file<sp/>will<sp/>use<sp/>to<sp/>call<sp/>the<sp/>method.</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a7b99cd25f29acb6fe3dc0f3c65bfbf5e" kindref="member">_pattern</ref><sp/>=<sp/>r&quot;[A-Z]+[a-z]*\s\.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1ae0524455667d6dc8697083a304272e9e" kindref="member">_sentence_pattern</ref><sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;([A-Z][^\.!?]*[\.!?])&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a102bd7c1d1ac8c1824b6471952aaaeae" kindref="member">_word_pattern</ref><sp/>=<sp/></highlight><highlight class="stringliteral">r&apos;\w+&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1acb340652fbfa1cb86b8f21e5dfb05b67" kindref="member">_regex</ref><sp/>=<sp/>re.compile(self.<ref refid="classmain_1_1statement__tokenizer_1ae0524455667d6dc8697083a304272e9e" kindref="member">_sentence_pattern</ref>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8ab7cc298ab0ec6d81b9be7e4904cde7" kindref="member">_tokens</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="16" refid="classmain_1_1statement__tokenizer_1a5c645ea998ef0569b7e292e4be29cc60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a5c645ea998ef0569b7e292e4be29cc60" kindref="member">nounList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="17" refid="classmain_1_1statement__tokenizer_1afd78f7a9c9e49e70eff211e394d51e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1afd78f7a9c9e49e70eff211e394d51e62" kindref="member">pronounList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="18" refid="classmain_1_1statement__tokenizer_1a2632648ba3e0bab916fa5eeb06cb71bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a2632648ba3e0bab916fa5eeb06cb71bb" kindref="member">adjectiveList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="19" refid="classmain_1_1statement__tokenizer_1a24c4eed7b89ee5776869a02ffe12b9a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a24c4eed7b89ee5776869a02ffe12b9a4" kindref="member">verbList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="20" refid="classmain_1_1statement__tokenizer_1a8d588b23dd51598c21aa8db357a605c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8d588b23dd51598c21aa8db357a605c4" kindref="member">adverbList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="21" refid="classmain_1_1statement__tokenizer_1a588793a987c8ca33478a89ce83d2fc98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a588793a987c8ca33478a89ce83d2fc98" kindref="member">conjunctionsList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="22" refid="classmain_1_1statement__tokenizer_1a925c7c14ab6750a9aa8bf1e811ca93e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a925c7c14ab6750a9aa8bf1e811ca93e8" kindref="member">interjectionsList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="23" refid="classmain_1_1statement__tokenizer_1a90d8cf9378c9353c8c8c4aec38374479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a90d8cf9378c9353c8c8c4aec38374479" kindref="member">unknownList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8d588b23dd51598c21aa8db357a605c4" kindref="member">adverbList</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classmain_1_1statement__tokenizer_1a695b1cb78882a051f601d83dc02a5b1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a695b1cb78882a051f601d83dc02a5b1f" kindref="member">get_tokens</ref>(self,<sp/>text)<sp/>-&gt;<sp/>list:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>responsible<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>splitting<sp/>of<sp/>the<sp/>individual<sp/>strings<sp/>into<sp/>the<sp/>required<sp/>tokens<sp/>which</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>takes<sp/><sp/>text<sp/>(string)<sp/>the<sp/>text<sp/>that<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>to<sp/>be<sp/>split<sp/>into<sp/>tokens.<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>returns<sp/>a<sp/>list<sp/>of<sp/>tokens.</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8ab7cc298ab0ec6d81b9be7e4904cde7" kindref="member">_tokens</ref><sp/>=<sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a892f3c06d122cf209f32be6eefdbf5ef" kindref="member">peformSentenceSplit</ref>(text)</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8ab7cc298ab0ec6d81b9be7e4904cde7" kindref="member">_tokens</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classmain_1_1statement__tokenizer_1a07a6fae900a0361a1169001e5300a935" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a07a6fae900a0361a1169001e5300a935" kindref="member">__str__</ref>(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>responsible<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>printing<sp/>of<sp/>the<sp/>tokens<sp/>that<sp/>are<sp/>returned<sp/>by<sp/>the<sp/>get_tokens<sp/>method.</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>takes<sp/>no<sp/>arguments<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>returns<sp/>a<sp/>string<sp/>of<sp/>the<sp/>tokens.<sp/>it<sp/>basically<sp/>overites<sp/>the<sp/>default<sp/>__str__<sp/>method.</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8ab7cc298ab0ec6d81b9be7e4904cde7" kindref="member">_tokens</ref>:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;statement<sp/>-&gt;<sp/>{s}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classmain_1_1statement__tokenizer_1a13e7472cbf6f1e025916d043fbe32289" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a13e7472cbf6f1e025916d043fbe32289" kindref="member">__repr__</ref>(self)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>responsible<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>printing<sp/>of<sp/>the<sp/>tokens<sp/>that<sp/>are<sp/>returned<sp/>by<sp/>the<sp/>get_tokens<sp/>method.</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>takes<sp/>no<sp/>arguments<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>returns<sp/>a<sp/>string<sp/>of<sp/>the<sp/>tokens.<sp/>it<sp/>basically<sp/>overites<sp/>the<sp/>default<sp/>__repr__<sp/>method.</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8ab7cc298ab0ec6d81b9be7e4904cde7" kindref="member">_tokens</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;statement<sp/>-&gt;<sp/>{s}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classmain_1_1statement__tokenizer_1a892f3c06d122cf209f32be6eefdbf5ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a892f3c06d122cf209f32be6eefdbf5ef" kindref="member">peformSentenceSplit</ref>(self,<sp/>text):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;This<sp/>function<sp/>takes<sp/>part<sp/>in<sp/>tokenization<sp/>of<sp/>whole<sp/>text<sp/>blocks<sp/>to<sp/>aid<sp/>the<sp/>word<sp/>tokenizer<sp/>to<sp/>be<sp/>able<sp/>to<sp/>identifty<sp/>tokens</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>based<sp/>on<sp/>specific<sp/>word.<sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>part<sp/>which<sp/>makes<sp/>the<sp/>whole<sp/>system<sp/>modular<sp/>making<sp/>it<sp/>possible<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>sentence<sp/>to<sp/>be<sp/>handled<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks.<sp/>this<sp/>will<sp/>also<sp/>give<sp/>the<sp/>possibility<sp/>to<sp/>thet<sp/>count<sp/>of<sp/>the<sp/>number<sp/>of<sp/>sentences<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatter<sp/>=<sp/>re.compile(self.<ref refid="classmain_1_1statement__tokenizer_1ae0524455667d6dc8697083a304272e9e" kindref="member">_sentence_pattern</ref>,<sp/>re.M)</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatter.findall(text)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classmain_1_1statement__tokenizer_1abdac0a8fb895b8ddd348b882747b05db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1abdac0a8fb895b8ddd348b882747b05db" kindref="member">performWordSplit</ref>(self,<sp/>text):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;This<sp/>function<sp/>takes<sp/>part<sp/>in<sp/>tokenization<sp/>of<sp/>whole<sp/>text<sp/>blocks<sp/>to<sp/>aid<sp/>the<sp/>word<sp/>tokenizer<sp/>to<sp/>be<sp/>able<sp/>to<sp/>identifty<sp/>tokens</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>based<sp/>on<sp/>specific<sp/>word.<sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>a<sp/>part<sp/>which<sp/>makes<sp/>the<sp/>whole<sp/>system<sp/>modular<sp/>making<sp/>it<sp/>possible<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>sentence<sp/>to<sp/>be<sp/>handled<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks.<sp/>this<sp/>will<sp/>also<sp/>give<sp/>the<sp/>possibility<sp/>to<sp/>thet<sp/>count<sp/>of<sp/>the<sp/>number<sp/>of<sp/>sentences<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatter<sp/>=<sp/>re.compile(self.<ref refid="classmain_1_1statement__tokenizer_1a102bd7c1d1ac8c1824b6471952aaaeae" kindref="member">_word_pattern</ref>,<sp/>re.M)</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatter.findall(text)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classmain_1_1statement__tokenizer_1a91cf2ca25a0cc576d029920853392860" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a91cf2ca25a0cc576d029920853392860" kindref="member">getAllTokens</ref>(self,<sp/>text):</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>responsible<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>tokenization<sp/>of<sp/>the<sp/>whole<sp/>text<sp/>block.<sp/>it<sp/>takes<sp/>the<sp/>text<sp/>block<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>an<sp/>argument<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>returns<sp/>a<sp/>list<sp/>of<sp/>tokens.</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textData<sp/>=<sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a6b94dcf6889b89105910bca6a62bfe64" kindref="member">retainAllTokens</ref>(text)</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>textData.split()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classmain_1_1statement__tokenizer_1a6b94dcf6889b89105910bca6a62bfe64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a6b94dcf6889b89105910bca6a62bfe64" kindref="member">retainAllTokens</ref>(self,<sp/>text):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>fuction<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>tp<sp/>prevent<sp/>the<sp/>elimination<sp/>of<sp/>special<sp/>characters<sp/>to<sp/>avoid<sp/>elimination<sp/>during<sp/>text<sp/>splitting</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>will<sp/>be<sp/>especially<sp/>important<sp/>what<sp/>there<sp/>will<sp/>to<sp/>be<sp/>identification<sp/>of<sp/>known<sp/>patters.</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>contains<sp/>a<sp/>special<sp/>regular<sp/>expresssion<sp/>that<sp/>checks<sp/>all<sp/>characaters<sp/>individually</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(text)):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">r&apos;\.|,|\?|\&apos;|\)|\}|\]|\:|\;&apos;</highlight><highlight class="normal">,<sp/>text[i]):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>new_text+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+text[i]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">r&apos;\(|\{|\[|\s&apos;</highlight><highlight class="normal">,<sp/>text[i]):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>new_text+text[i]+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_text<sp/>=<sp/>new_text+text[i]</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_text</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>generate<sp/>a<sp/>dunction<sp/>to<sp/>match<sp/>all<sp/>words<sp/>starting<sp/>with<sp/>an<sp/>A<sp/>or<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classmain_1_1statement__tokenizer_1a0b0ba2147afd261c75986b242926b15c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a0b0ba2147afd261c75986b242926b15c" kindref="member">matchAllWordsStartingWithB</ref>(self,<sp/>text):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>aim<sp/>of<sp/>this<sp/>function<sp/>is<sp/>to<sp/>match<sp/>all<sp/>words<sp/>starting<sp/>with<sp/>an<sp/>A<sp/>or<sp/>a<sp/>this<sp/>is<sp/>performed<sp/>by<sp/>the<sp/>use<sp/>of<sp/>a<sp/>regular<sp/>expression&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formatter<sp/>=<sp/>re.compile(</highlight><highlight class="stringliteral">r&apos;\b[Bb]\w+&apos;</highlight><highlight class="normal">,<sp/>re.M)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>re.findall(formatter,<sp/>text)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Words<sp/>starting<sp/>with<sp/>B<sp/>or<sp/>b<sp/>are:<sp/>&apos;</highlight><highlight class="normal">,<sp/>len(data))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data</highlight></codeline>
<codeline lineno="93" refid="classmain_1_1statement__tokenizer_1a07b22ae554127eec66337e8bb0455d11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classmain_1_1statement__tokenizer_1a07b22ae554127eec66337e8bb0455d11" kindref="member">identifyPartsOfSpeech</ref>(self,<sp/>text):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;This<sp/>function<sp/>is<sp/>responsible<sp/>for<sp/>the<sp/>identification<sp/>of<sp/>the<sp/>parts<sp/>of<sp/>speech<sp/>of<sp/>the<sp/>words<sp/>in<sp/>the<sp/>text<sp/>block.</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>takes<sp/>the<sp/>list<sp/>of<sp/>words<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>an<sp/>argument<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>returns<sp/>a<sp/>list<sp/>of<sp/>parts<sp/>of<sp/>speech.<sp/>This<sp/>will<sp/>make<sp/>use<sp/>of<sp/>the<sp/>[parts_speech]<sp/>file</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>contains<sp/>the<sp/>list<sp/>of<sp/>parts<sp/>of<sp/>speech<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>the<sp/>words<sp/>that<sp/>belong<sp/>to<sp/>each<sp/>part<sp/>of<sp/>speech.<sp/>The<sp/>group<sp/>works<sp/>on<sp/>code<sp/>that<sp/>deals<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>letter<sp/>B</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>cases<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a0b0ba2147afd261c75986b242926b15c" kindref="member">matchAllWordsStartingWithB</ref>(text)</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>data:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>nouns:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a5c645ea998ef0569b7e292e4be29cc60" kindref="member">nounList</ref>.append(word)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pronouns:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1afd78f7a9c9e49e70eff211e394d51e62" kindref="member">pronounList</ref>.append(word)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>adjectives:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a2632648ba3e0bab916fa5eeb06cb71bb" kindref="member">adjectiveList</ref>.append(word)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>verbs:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a24c4eed7b89ee5776869a02ffe12b9a4" kindref="member">verbList</ref>.append(word)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>adverbs:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a8d588b23dd51598c21aa8db357a605c4" kindref="member">adverbList</ref>.append(word)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>conjunctions:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a588793a987c8ca33478a89ce83d2fc98" kindref="member">conjunctionsList</ref>.append(word)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>word<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>interjections:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a925c7c14ab6750a9aa8bf1e811ca93e8" kindref="member">interjectionsList</ref>.append(word)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classmain_1_1statement__tokenizer_1a90d8cf9378c9353c8c8c4aec38374479" kindref="member">unknownList</ref>.append(word+</highlight><highlight class="stringliteral">&quot;<sp/>Unknown&quot;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="main.py"/>
  </compounddef>
</doxygen>
